# This is a basic workflow to help you get started with Actions

name: "CI"

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    #types: [opened, synchronize, closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_windows:

    name: Build (OS Windows)

    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "> Check out current repository"
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          token: ${{ github.token }}
          path: ${{ github.workspace }}

      - name: "> Install Graphviz"
        uses: ts-graphviz/setup-graphviz@v1

      - name: "> Build graph"
        shell: cmd
        env:
          target_file_path: ${{github.workspace}}${{'\scripts'}}
        run: |
          ICACLS.EXE * /reset /t /c /q
          CD /D scripts\
          ECHO ----------------------------------------
          CALL "%target_file_path%\compile.bat"

  build_ubuntu:

    name: Build (OS Ubuntu)

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "> Check out current repository"
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          token: ${{ github.token }}
          path: ${{ github.workspace }}

      - name: "> Install Graphviz"
        uses: ts-graphviz/setup-graphviz@v1

      - name: "> Build graph"
        shell: bash
        env:
          target_file_path: ${{github.workspace}}${{'\scripts'}}
        run: |
          find $pwd -type f -iname "*.sh" -exec chmod +x {} \;
          cd "./scripts/";
          echo "----------------------------------------";
          exec "$target_file_path\compile.sh";

  # ci_job_cancel_test_win:
  #   name: CI job cancel test (OS Windows)
  #   runs-on: windows-latest
  #   steps:
  #     - name: Job cancel
  #       shell: cmd
  #       run: |
  #         ECHO Hello world!
  #         ECHO ----------------------------------------
  #         EXIT 0

  # ci_job_cancel_test_lin:
  #   name: CI job cancel test (OS *nux)
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Job cancel
  #       shell: bash
  #       run: |
  #         echo "Hello world!"
  #         echo "----------------------------------------"
  #         exit 0

  # ci_job_cancel_test_mac:
  #   name: CI job cancel test (macOS)
  #   runs-on: macos-latest
  #   steps:
  #     - name: Job cancel
  #       shell: sh
  #       run: |
  #         echo "Hello world!"
  #         echo "----------------------------------------"
  #         exit 0
